     1 (* handle strings with open character arrays *)
     2 
     3 (* $Id: Character.mi,v 1.3 1991/11/21 14:47:50 grosch rel $ *)
     4 
     5 (* $Log: Character.mi,v $
c    6  * Revision 1.3  1991/11/21  14:47:50  grosch
c    7  * new version of RCS on SPARC
c    8  *
c    9  * Revision 1.2  90/06/11  18:44:41  grosch
c   10  * layout improvements
c   11  * 
c   12  * Revision 1.1  89/01/12  18:05:43  vielsack
c   13  * supply procedure Assign to assign a character string
c   14  * 
c   15  * Revision 1.0  88/10/04  14:26:38  vielsack
c   16  * Initial revision
c   17  * 
c   18  *)
    19 
    20 IMPLEMENTATION MODULE Character;                                              *     *
    21 
    22 PROCEDURE IsEqual (c1, c2: ARRAY OF CHAR): BOOLEAN;                           *     *     *     *     *
    23   VAR
    24     pos: CARDINAL;                                                            *     *
    25     len: CARDINAL;                                                            *     *
    26   BEGIN
    27     pos := 0;                                                                24
    28     len := Length (c1);                                                      25     *    22
    29     IF len # Length (c2) THEN RETURN FALSE; END;                             25     *    22     *
    30     pos := 0;                                                                24
    31     LOOP
    32       IF pos >= len THEN EXIT; END;                                          24    25
    33       IF c1 [pos] # c2 [pos] THEN EXIT; END;                                 22    24    22    24
    34       INC (pos);                                                              *    24
    35     END;
    36     RETURN pos = len;                                                        24    25
    37   END IsEqual;                                                               22
    38 
    39 PROCEDURE Length (c: ARRAY OF CHAR): CARDINAL;                                *     *     *     *
    40   VAR len: CARDINAL;                                                         25     *
    41   BEGIN
    42     len := 0;                                                                40
    43     LOOP
    44       IF len > HIGH (c) THEN EXIT; END;                                      40     *    39
    45       IF c [len] = 0C THEN EXIT; END;                                        39    40
    46       INC (len);                                                              *    40
    47     END;
    48     RETURN len;                                                              40
    49   END Length;                                                                39
    50 
    51 PROCEDURE Assign (VAR s1: ARRAY OF CHAR; s2: ARRAY OF CHAR);                  *     *     *     *     *
    52   VAR i: CARDINAL;                                                            *     *
    53   BEGIN
    54     FOR i := 0 TO Length (s2) DO                                             52    39    51
    55       s1 [i] := s2 [i];                                                      51    52    51    52
    56     END;
    57   END Assign;                                                                51
    58 
    59 END Character.                                                               20
Cross reference: * is declaration, = is assignment

-A-
 Assign                          51*   57 

-B-
 BOOLEAN                         22 

-C-
 c                               39*   44    45 
 c1                              22*   28    33 
 c2                              22*   29    33 
 CARDINAL                        24    25    39    40    52 
 CHAR                            22    39    51    51 
 Character                       20*   59 

-F-
 FALSE                           29 

-H-
 HIGH                            44 

-I-
 i                               52*   54=   55    55 
 IMPLEMENTATION                  20*
 INC                             34    46 
 IsEqual                         22*   37 

-L-
 len                             25*   28=   29    32    36    40*   42=   44    45    46    48 
 Length                          28    29    39*   49    54 

-P-
 pos                             24*   27=   30=   32    33    33    34    36 

-S-
 s1                              51*   55=
 s2                              51*   54    55 

end cross reference, 63 occurrences of 19 identifiers.

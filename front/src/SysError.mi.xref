     1 (* handle system errors *)
     2 
     3 (* $Id: SysError.mi,v 2.3 1992/08/07 15:13:51 grosch rel $ *)
     4 
     5 (* $Log: SysError.mi,v $
c    6  * Revision 2.3  1992/08/07  15:13:51  grosch
c    7  * allow several scanner and parsers; extend module Errors
c    8  *
c    9  * Revision 2.2  1992/01/30  13:34:33  grosch
c   10  * redesign of interface to operating system
c   11  *
c   12  * Revision 2.1  1991/11/21  14:47:50  grosch
c   13  * new version of RCS on SPARC
c   14  *
c   15  * Revision 2.0  91/03/08  18:26:40  grosch
c   16  * turned tables into initialized arrays (in C)
c   17  * moved mapping tokens -> strings from Errors to Parser
c   18  * changed interface for source position
c   19  * 
c   20  * Revision 1.1  90/06/11  18:45:42  grosch
c   21  * layout improvements
c   22  * 
c   23  * Revision 1.0  88/10/04  14:27:20  vielsack
c   24  * Initial revision
c   25  * 
c   26  *)
    27 
    28 IMPLEMENTATION MODULE SysError;                                               *     *
    29 
    30 FROM Errors     IMPORT ErrorMessage, ErrorMessageI, SysOffset;                *     *     *     *
    31 FROM SYSTEM     IMPORT ADDRESS;                                               *     *
    32 FROM System     IMPORT ErrNum;                                                *     *
    33 FROM Positions  IMPORT NoPosition;                                            *     *
    34 
    35 PROCEDURE StatIsBad (N: INTEGER): BOOLEAN;                                    *     *     *     *
    36   BEGIN
    37     RETURN N < 0;                                                            35
    38   END StatIsBad;                                                             35
    39 
    40 PROCEDURE SysErrorMessageI (N: INTEGER; ErrCl, InfCl: CARDINAL; Info: ADDRESS);     *    35     *     *     *     *     *
                                                                                    31
    41   BEGIN
    42     IF StatIsBad (N) THEN                                                    35    40
    43       ErrorMessageI (ErrNum () + SysOffset, ErrCl, NoPosition, InfCl, Info);       30    32    30    40    33    40    40
    44     END;
    45   END SysErrorMessageI;                                                      40
    46 
    47 PROCEDURE SysErrorMessage (N: INTEGER; ErrCl: CARDINAL);                      *    40     *    40     *
    48   BEGIN
    49     IF StatIsBad (N) THEN                                                    35    47
    50       ErrorMessage (ErrNum () + SysOffset, ErrCl, NoPosition);               30    32    30    47    33
    51     END;
    52   END SysErrorMessage;                                                       47
    53 
    54 END SysError.                                                                28
Cross reference: * is declaration, = is assignment

-A-
 ADDRESS                         31*   40 

-B-
 BOOLEAN                         35 

-C-
 CARDINAL                        40    47 

-E-
 ErrCl                           40*   43    47*   50 
 ErrNum                          32*   43    50 
 ErrorMessage                    30*   50 
 ErrorMessageI                   30*   43 
 Errors                          30*

-I-
 IMPLEMENTATION                  28*
 InfCl                           40*   43 
 Info                            40*   43 
 INTEGER                         35    40    47 

-N-
 N                               35*   37    40*   42    47*   49 
 NoPosition                      33*   43    50 

-P-
 Positions                       33*

-S-
 StatIsBad                       35*   38    42    49 
 SysError                        28*   54 
 SysErrorMessage                 47*   52 
 SysErrorMessageI                40*   45 
 SysOffset                       30*   43    50 
 SYSTEM                          31*
 System                          32*

end cross reference, 50 occurrences of 22 identifiers.

#
# Makefile for reuse/src
# RMB 93/10/19 and earlier. 
#     Modified for installation on local system
#     Modified to support WRL compilation.
#     Modified to support mocka_mtc compilation
#     Apr 1999 Rework for new directory org
#     Aug 2000 (WSU) rework for movable install directories. 
#
ifndef INSTALLGMD
  INSTALLGMD=/usr/local
endif
export INSTALLGMD

#TARGET	= SUN
MC      = mocka_mtc
OPT	= -O
UNIX	= UNIX
CFLAGS	= $(OPT) -D$(UNIX)
CC	= gcc

INSTALLMOCKASYM    = $(INSTALLGMD)/lib/reuse/mockasym
INSTALLDEFS    = $(INSTALLGMD)/lib/reuse/m2def

# This must satisfy the IMPORT partial ordering: 
MODULADEFS = System.md IO.md \
	  Strings.md StringMem.md \
          Arguments.md Checks.md \
          DynArray.md \
          General.md Heap.md \
          Idents.md Layout.md \
          Lists.md Memory.md \
          Positions.md Sets.md Relations.md \
          SetsC.md Sort.md \
          Source.md StdIO.md \
          Texts.md \
          Times.md Errors.md   
MODULAIMPS = Checks.mi \
          DynArray.mi \
          Errors.mi General.mi Heap.mi \
          IO.mi Idents.mi Layout.mi \
          Lists.mi Main.mi Memory.mi \
          Positions.mi Relations.mi \
          Sets.mi SetsC.mi Sort.mi \
          Source.mi StdIO.mi StringMem.mi \
          Strings.mi Texts.mi \
          Times.mi 
MODULADRIVERS = DynArrDrv.mi \
          IODrv.mi \
          MemoryDrv.mi \
          RelDrv.mi \
          SetsDrv.mi \
          SysIODrv.mi \
          force.mi
MODULASOURCES = $(MODULADEFS) $(MODULAIMPS) $(MODULADRIVERS) 
OTHERSOURCES = 
SOURCES = $(MODULASOURCES) $(OTHERSOURCES)

OTHERMTCSOURCES = SYSTEM_.h SYSTEM_.c

MODULAGENS    = 
GENS    = 
EXE     = Main
MAKEINCLUDE = .
MOCKAFLAGS = -elf -index -range -noS -g -gc -ge -blip
include $(MAKEINCLUDE)/make.include

# Library DEFINITION MODULES, by mocka1807: 

defmods : deflinks compiledefs
compiledefs :
	for file in $(MODULADEFS); do echo $$file; mocka $(MOCKAFLAGS) -s `basename $$file .md`; done

deflinks :
	for file in $(MODULADEFS); do ln -sf $$file `basename $$file .md`.def; done

# IMPLEMENTATION MODULES, by mocka1807L

impmods : implinks compileimps
compileimps :
	for file in $(MODULAIMPS); do echo $$file; mocka $(MOCKAFLAGS) -c `basename $$file .mi`; done

implinks :
	for file in $(MODULAIMPS); do ln -sf $$file `basename $$file .mi`.mod; done

# Main program  MODULES, by mocka1807

drvmods : drvlinks compiledrvs
compiledrvs :
	for file in $(MODULADRIVERS); do echo $$file; mocka $(MOCKAFLAGS) -c `basename $$file .mi`; done
	for file in $(MODULADRIVERS); do echo $$file; mocka $(MOCKAFLAGS) -p `basename $$file .mi`; done

drvlinks :
	for file in $(MODULADRIVERS); do ln -sf $$file `basename $$file .mi`.mod; done

test : test_$(MC)

# Create install directories: 

$(INSTALLMOCKASYM) : $(INSTALLGMD)
	sh -c "if test ! -d $(INSTALLMOCKASYM) ; then mkdir --parents $(INSTALLMOCKASYM); else true; fi"

$(INSTALLDEFS) : $(INSTALLGMD)
	sh -c "if test ! -d $(INSTALLDEFS) ; then mkdir --parents $(INSTALLDEFS); else true; fi"

install_modula: $(INSTALLDEFS)
	cp -p $(MODULADEFS) $(INSTALLDEFS)

install_mocka: $(INSTALLMOCKASYM) build_mocka_d
#	for file in `ls *.d`; do cp -p $$file $(INSTALLMOCKASYM); chmod a+r $(INSTALLMOCKASYM)/$$file; done
	for file in $(MODULADEFS); do cp -p `basename $$file .md`.d $(INSTALLMOCKASYM); chmod a+r $(INSTALLMOCKASYM)/`basename $$file .md`.d; done
	for file in $(MODULAIMPS); do cp -p `basename $$file .mi`.r $(INSTALLMOCKASYM); chmod a+r $(INSTALLMOCKASYM)/`basename $$file .mi`.r; done
	cp -p System.r $(INSTALLMOCKASYM); chmod a+r $(INSTALLMOCKASYM)/System.r

build_mocka_d :
	echo p force | mocka $(MOCKAFLAGS)

test_mocka:	System.o
	echo p DynArrDrv| mc
	echo p IODrv	| mc
	echo p MemoryDrv| mc
	echo p RelDrv	| mc
	echo p SetsDrv	| mc
	echo p SysIODrv	| mc

lint:
	lint -u *.c

CLEAN:	clean
	rm -f *.[dimor] $(GENS) 

clean:
	rm -f *Drv.[dimor] *Drv.sym *Drv Main.[dimor] Main t *.bak

.c.o:
	$(CC) $(CFLAGS) -c $*.c;

.md.def:
	ln -s $*.md $*.def

.mi.mod:
	ln -s $*.mi $*.mod
        






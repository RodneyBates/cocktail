	.comm	_Sets_s, 8
	.text
	.stabs "/home/rodney/proj/gmd/working/reuse/gen/",100,0,0,.LBB0
	.stabs "Sets.mi",100,0,0,.LBB0
.LBB0:
	.stabs "BOOLEAN:t1=eTRUE:1,FALSE:0,;",0x80,0,0,0
	.stabs "CHAR:t2=r2;0;255;",0x80,0,0,0
	.stabs "SHORTCARD:t3=r3;0;65535;",0x80,0,0,0
	.stabs "LONGCARD:t4=r4;0;-1;",0x80,0,0,0
	.stabs "CARDINAL:t5=r5;0;-1;",0x80,0,0,0
	.stabs "SHORTINT:t6=r6;-32768;32767;",0x80,0,0,0
	.stabs "LONGINT:t7=r7;-2147483648;2147483647;",0x80,0,0,0
	.stabs "INTEGER:t8=r8;-2147483648;2147483647;",0x80,0,0,0
	.stabs "REAL:t9=r8;4;0;",0x80,0,0,0
	.stabs "LONGREAL:t10=r8;8;0;",0x80,0,0,0
	.stabs "BITSET:t11=r4;0;-1",0x80,0,0,0
	.stabs "WORD:t13=r13;0;255;",0x80,0,0,0
	.stabs "BYTE:t14=r2;0;255",0x80,0,0,0
	.stabs "VOID:t16=16",0x80,0,0,0
	.stabs "ADDRESS:t15=*16",0x80,0,0,0
	.stabs "PROC:t12=*f16;",0x80,0,0,0
	.globl	IO_CloseIO
	.globl	IO_WriteNl
	.globl	IO_WriteCard
	.globl	IO_WriteLong
	.globl	IO_WriteShort
	.globl	IO_WriteS
	.globl	IO_WriteN
	.globl	IO_WriteB
	.globl	IO_WriteR
	.globl	IO_WriteI
	.globl	IO_WriteC
	.globl	IO_Write
	.globl	IO_WriteFlush
	.globl	IO_WriteClose
	.globl	IO_WriteOpen
	.globl	IO_EndOfFile
	.globl	IO_EndOfLine
	.globl	IO_UnRead
	.globl	IO_ReadNl
	.globl	IO_ReadCard
	.globl	IO_ReadLong
	.globl	IO_ReadShort
	.globl	IO_ReadS
	.globl	IO_ReadN
	.globl	IO_ReadB
	.globl	IO_ReadR
	.globl	IO_ReadI
	.globl	IO_ReadC
	.globl	IO_Read
	.globl	IO_ReadClose
	.globl	IO_ReadOpen
	.globl	DynArray_ReleaseArray
	.globl	DynArray_ExtendArray
	.globl	DynArray_MakeArray
	.globl	General_Exp10
	.globl	General_AntiLog
	.globl	General_Exp2
	.globl	General_Log2
	.globl	General_MaxSHORTCARD
	.globl	General_MinSHORTCARD
	.globl	General_Max
	.globl	General_Min
	.globl	Sets
	.globl	Sets_WriteElmt
	.globl	Sets_WriteSet
	.globl	Sets_ReadSet
	.globl	Sets_ForallDo
	.globl	Sets_AssignEmpty
	.globl	Sets_AssignElmt
	.globl	Sets_Assign
	.globl	Sets_Exists1
	.globl	Sets_Exists
	.globl	Sets_Forall
	.globl	Sets_IsEmpty
	.globl	Sets_IsElement
	.globl	Sets_IsNotEqual
	.globl	Sets_IsEqual
	.globl	Sets_IsStrictSubset
	.globl	Sets_IsSubset
	.globl	Sets_Extract
	.globl	Sets_Select
	.globl	Sets_Maximum
	.globl	Sets_Minimum
	.globl	Sets_Size
	.globl	Sets_Card
	.globl	Sets_Exclude
	.globl	Sets_Include
	.globl	Sets_Complement
	.globl	Sets_SymDiff
	.globl	Sets_Intersection
	.globl	Sets_Difference
	.globl	Sets_Union
	.globl	Sets_ReleaseSet
	.globl	Sets_MakeSet
	.globl	Sets_InitNullSet
	.stabs "Sets_WriteElmt:F16",36,0,0,Sets_WriteElmt
	.align 4
Sets_WriteElmt:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1, %esp
.LN1:
	.stabn  68,0,468,.LN1-Sets_WriteElmt		# line 468, column 4
.LBB1:
.LN2:
	.stabn  68,0,469,.LN2-Sets_WriteElmt		# line 469, column 7
	pushl	$32
	pushl	_Sets_s + 4
	call	IO_WriteC
	addl	$8, %esp
.LN3:
	.stabn  68,0,470,.LN3-Sets_WriteElmt		# line 470, column 7
	pushl	$0
	pushl	8(%ebp)
	pushl	_Sets_s + 4
	call	IO_WriteCard
	addl	$12, %esp
.LN4:
	.stabn  68,0,471,.LN4-Sets_WriteElmt		# line 471, column 0
.LBE1:
	leave
	ret
	.Lab1 = 4
	.stabs "tElement:t17=4",128,0,0,0
	.stabs "Elmt:p17",160,0,4,8
	.stabn 192,0,0,.LBB1
	.stabn 224,0,0,.LBE1
	.stabs "Sets_WriteSet:F16",36,0,0,Sets_WriteSet
	.align 4
Sets_WriteSet:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab2, %esp
.LN5:
	.stabn  68,0,451,.LN5-Sets_WriteSet		# line 451, column 4
.LBB2:
	leal	12(%ebp),%eax
	movl	%eax,-8(%ebp) 
.LN6:
	.stabn  68,0,460,.LN6-Sets_WriteSet		# line 460, column 12
	movl	8(%ebp),%eax
	movl	%eax,_Sets_s + 4 
.LN7:
	.stabn  68,0,461,.LN7-Sets_WriteSet		# line 461, column 10
	pushl	$123
	pushl	8(%ebp)
	call	IO_WriteC
	addl	$8, %esp
.LN8:
	.stabn  68,0,462,.LN8-Sets_WriteSet		# line 462, column 10
	leal	Sets_WriteElmt,%eax
	pushl	%eax
	leal	12(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Sets_ForallDo
	addl	$20, %esp
.LN9:
	.stabn  68,0,463,.LN9-Sets_WriteSet		# line 463, column 10
	pushl	$125
	pushl	8(%ebp)
	call	IO_WriteC
	addl	$8, %esp
.LN10:
	.stabn  68,0,464,.LN10-Sets_WriteSet		# line 464, column 0
.LBE2:
	leave
	ret
	.Lab2 = 8
	.stabs "ArrayOfBitset:t20=ar3;0;65535;11",128,0,0,0
	.stabs "tSet:t18=s14LastElmt:3,96,16;FirstElmt:3,80,16;Card:3,64,16;MaxElmt:3,48,16;LastBitset:3,32,16;BitsetPtr:19=*20,0,32;;",128,0,0,0
	.stabs "Set:p18",160,0,14,12
	.stabs "tFile:t21=7",128,0,0,0
	.stabs "f:p21",160,0,4,8
	.stabn 192,0,0,.LBB2
	.stabn 224,0,0,.LBE2
	.stabs "Sets_ReadSet:F16",36,0,0,Sets_ReadSet
	.align 4
Sets_ReadSet:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab3, %esp
.LN11:
	.stabn  68,0,436,.LN11-Sets_ReadSet		# line 436, column 4
.LBB3:
.Lab4:
.LN12:
	.stabn  68,0,437,.LN12-Sets_ReadSet		# line 437, column 30
	pushl	8(%ebp)
	call	IO_ReadC
	addl	$4, %esp
	cmpb	$123,%al
	jne	.Lab4
.Lab5:
.LN13:
	.stabn  68,0,438,.LN13-Sets_ReadSet		# line 438, column 7
	pushl	12(%ebp)
	call	Sets_AssignEmpty
	addl	$4, %esp
.LN14:
	.stabn  68,0,439,.LN14-Sets_ReadSet		# line 439, column 12
	movw	$0,-6(%ebp) 
.Lab6:
.LN15:
	.stabn  68,0,441,.LN15-Sets_ReadSet		# line 441, column 10
	pushl	8(%ebp)
	call	IO_ReadC
	addl	$4, %esp
	cmpb	$125,%al
	jne	.Lab8
.Lab9:
.LN16:
	.stabn  68,0,441,.LN16-Sets_ReadSet		# line 441, column 34
	jmp	.Lab7
.Lab8:
.LN17:
	.stabn  68,0,442,.LN17-Sets_ReadSet		# line 442, column 10
	pushl	8(%ebp)
	call	IO_ReadCard
	addl	$4, %esp
	cmpl	$65534,%eax
	jbe	.Lab10
.Lab11:
   	call	BoundErr_		
.Lab10:
	pushl	%eax
	pushl	12(%ebp)
	call	Sets_Include
	addl	$8, %esp
.LN18:
	.stabn  68,0,443,.LN18-Sets_ReadSet		# line 443, column 10
	incw	-6(%ebp) 
	jmp	.Lab6
.Lab7:
.LN19:
	.stabn  68,0,445,.LN19-Sets_ReadSet		# line 445, column 16
	movl	12(%ebp),%ebx
	movw	-6(%ebp),%ax
	movw	%ax,8(%ebx) 
.LN20:
	.stabn  68,0,446,.LN20-Sets_ReadSet		# line 446, column 0
.LBE3:
	leave
	ret
	.Lab3 = 8
	.stabs "card:3",128,0,2,-6
	.stabs "Set:v18",160,0,14,12
	.stabs "f:p21",160,0,4,8
	.stabn 192,0,0,.LBB3
	.stabn 224,0,0,.LBE3
	.stabs "Sets_ForallDo:F16",36,0,0,Sets_ForallDo
	.align 4
Sets_ForallDo:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab12, %esp
.LN21:
	.stabn  68,0,422,.LN21-Sets_ForallDo		# line 422, column 4
.LBB4:
	leal	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN22:
	.stabn  68,0,424,.LN22-Sets_ForallDo		# line 424, column 9
	movl	-12(%ebp),%eax
	cmpl	$0,(%eax)
	je	.Lab13
.Lab14:
.LN23:
	.stabn  68,0,426,.LN23-Sets_ForallDo		# line 426, column 11
	movl	-12(%ebp),%eax
	movw	10(%eax),%ax
	movw	%ax,-16(%ebp) 
	movl	-12(%ebp),%eax
	movw	12(%eax),%ax
	movw	%ax,-20(%ebp) 
	movw	-16(%ebp),%ax
	cmpw	-20(%ebp),%ax
	ja	.Lab15
	movw	-16(%ebp),%ax
	movw	%ax,-6(%ebp) 
	movw	-20(%ebp),%ax
	movw	%ax,-24(%ebp) 
.Lab16:
.LN24:
	.stabn  68,0,427,.LN24-Sets_ForallDo		# line 427, column 14
	leal	8(%ebp),%eax
	pushl	%eax
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab19
.Lab20:
   	call	BoundErr_		
.Lab19:
	pushl	%eax
	call	Sets_IsElement
	addl	$8, %esp
	cmpb	$0,%al
	je	.Lab17
.Lab18:
.LN25:
	.stabn  68,0,428,.LN25-Sets_ForallDo		# line 428, column 19
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab21
.Lab22:
   	call	BoundErr_		
.Lab21:
	pushl	%eax
	movl	24(%ebp),%eax
	call	%eax
	addl	$4, %esp
.Lab17:
.LN26:
	.stabn  68,0,426,.LN26-Sets_ForallDo		# line 426, column 11
	movw	-6(%ebp),%ax
	cmpw	-24(%ebp),%ax
	jae	.Lab15
	incw	-6(%ebp) 
	jmp	.Lab16
.Lab15:
.Lab13:
.LN27:
	.stabn  68,0,427,.LN27-Sets_ForallDo		# line 427, column 0
.LBE4:
	leave
	ret
	.Lab12 = 24
	.stabs "i:3",128,0,2,-6
	.stabs "ProcOftElement:t22=12",128,0,0,0
	.stabs "Proc:p22",160,0,4,24
	.stabs "Set:p18",160,0,14,8
	.stabn 192,0,0,.LBB4
	.stabn 224,0,0,.LBE4
	.stabs "Sets_AssignEmpty:F16",36,0,0,Sets_AssignEmpty
	.align 4
Sets_AssignEmpty:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab23, %esp
.LN28:
	.stabn  68,0,407,.LN28-Sets_AssignEmpty		# line 407, column 4
.LBB5:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN29:
	.stabn  68,0,409,.LN29-Sets_AssignEmpty		# line 409, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab24
.Lab25:
.LN30:
	.stabn  68,0,411,.LN30-Sets_AssignEmpty		# line 411, column 27
	movl	-12(%ebp),%eax
	movl	(%eax),%ebx
	movzwl	-6(%ebp),%eax
	movl	$0,(%ebx,%eax,4) 
.LN31:
	.stabn  68,0,412,.LN31-Sets_AssignEmpty		# line 412, column 13
	incw	-6(%ebp) 
.Lab24:
.LN32:
	.stabn  68,0,410,.LN32-Sets_AssignEmpty		# line 410, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab25
.Lab26:
.LN33:
	.stabn  68,0,414,.LN33-Sets_AssignEmpty		# line 414, column 20
	movl	-12(%ebp),%eax
	movw	$0,8(%eax) 
.LN34:
	.stabn  68,0,415,.LN34-Sets_AssignEmpty		# line 415, column 20
	movl	-12(%ebp),%ebx
	movl	-12(%ebp),%eax
	movw	6(%eax),%ax
	movw	%ax,10(%ebx) 
.LN35:
	.stabn  68,0,416,.LN35-Sets_AssignEmpty		# line 416, column 20
	movl	-12(%ebp),%eax
	movw	$0,12(%eax) 
.LN36:
	.stabn  68,0,417,.LN36-Sets_AssignEmpty		# line 417, column 0
.LBE5:
	leave
	ret
	.Lab23 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB5
	.stabn 224,0,0,.LBE5
	.stabs "Sets_AssignElmt:F16",36,0,0,Sets_AssignElmt
	.align 4
Sets_AssignElmt:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab27, %esp
.LN37:
	.stabn  68,0,395,.LN37-Sets_AssignElmt		# line 395, column 4
.LBB6:
	movl	8(%ebp),%eax
	movl	%eax,-8(%ebp) 
.LN38:
	.stabn  68,0,397,.LN38-Sets_AssignElmt		# line 397, column 10
	pushl	8(%ebp)
	call	Sets_AssignEmpty
	addl	$4, %esp
.LN39:
	.stabn  68,0,398,.LN39-Sets_AssignElmt		# line 398, column 10
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	Sets_Include
	addl	$8, %esp
.LN40:
	.stabn  68,0,399,.LN40-Sets_AssignElmt		# line 399, column 20
	movl	-8(%ebp),%eax
	movw	$1,8(%eax) 
.LN41:
	.stabn  68,0,400,.LN41-Sets_AssignElmt		# line 400, column 20
	movl	-8(%ebp),%ebx
	movl	12(%ebp),%eax
	movw	%ax,10(%ebx) 
.LN42:
	.stabn  68,0,401,.LN42-Sets_AssignElmt		# line 401, column 20
	movl	-8(%ebp),%ebx
	movl	12(%ebp),%eax
	movw	%ax,12(%ebx) 
.LN43:
	.stabn  68,0,402,.LN43-Sets_AssignElmt		# line 402, column 0
.LBE6:
	leave
	ret
	.Lab27 = 8
	.stabs "Elmt:p17",160,0,4,12
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB6
	.stabn 224,0,0,.LBE6
	.stabs "Sets_Assign:F16",36,0,0,Sets_Assign
	.align 4
Sets_Assign:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab28, %esp
.LN44:
	.stabn  68,0,381,.LN44-Sets_Assign		# line 381, column 4
.LBB7:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN45:
	.stabn  68,0,383,.LN45-Sets_Assign		# line 383, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab29
.Lab30:
.LN46:
	.stabn  68,0,385,.LN46-Sets_Assign		# line 385, column 27
	movl	-12(%ebp),%eax
	movl	(%eax),%edx
	movzwl	-6(%ebp),%ecx
	movl	12(%ebp),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
	movl	%eax,(%edx,%ecx,4) 
.LN47:
	.stabn  68,0,386,.LN47-Sets_Assign		# line 386, column 13
	incw	-6(%ebp) 
.Lab29:
.LN48:
	.stabn  68,0,384,.LN48-Sets_Assign		# line 384, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab30
.Lab31:
.LN49:
	.stabn  68,0,388,.LN49-Sets_Assign		# line 388, column 20
	movl	-12(%ebp),%ebx
	movw	20(%ebp),%ax
	movw	%ax,8(%ebx) 
.LN50:
	.stabn  68,0,389,.LN50-Sets_Assign		# line 389, column 20
	movl	-12(%ebp),%ebx
	movw	22(%ebp),%ax
	movw	%ax,10(%ebx) 
.LN51:
	.stabn  68,0,390,.LN51-Sets_Assign		# line 390, column 20
	movl	-12(%ebp),%ebx
	movw	24(%ebp),%ax
	movw	%ax,12(%ebx) 
.LN52:
	.stabn  68,0,391,.LN52-Sets_Assign		# line 391, column 0
.LBE7:
	leave
	ret
	.Lab28 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set2:p18",160,0,14,12
	.stabs "Set1:v18",160,0,14,8
	.stabn 192,0,0,.LBB7
	.stabn 224,0,0,.LBE7
	.stabs "Sets_Exists1:F1",36,0,0,Sets_Exists1
	.align 4
Sets_Exists1:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab32, %esp
.LN53:
	.stabn  68,0,368,.LN53-Sets_Exists1		# line 368, column 4
.LBB8:
	leal	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN54:
	.stabn  68,0,370,.LN54-Sets_Exists1		# line 370, column 12
	movw	$0,-8(%ebp) 
.LN55:
	.stabn  68,0,371,.LN55-Sets_Exists1		# line 371, column 10
	movl	-12(%ebp),%eax
	movw	10(%eax),%ax
	movw	%ax,-16(%ebp) 
	movl	-12(%ebp),%eax
	movw	12(%eax),%ax
	movw	%ax,-20(%ebp) 
	movw	-16(%ebp),%ax
	cmpw	-20(%ebp),%ax
	ja	.Lab33
	movw	-16(%ebp),%ax
	movw	%ax,-6(%ebp) 
	movw	-20(%ebp),%ax
	movw	%ax,-24(%ebp) 
.Lab34:
.LN56:
	.stabn  68,0,372,.LN56-Sets_Exists1		# line 372, column 13
	leal	8(%ebp),%eax
	pushl	%eax
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab38
.Lab39:
   	call	BoundErr_		
.Lab38:
	pushl	%eax
	call	Sets_IsElement
	addl	$8, %esp
	cmpb	$0,%al
	je	.Lab35
.Lab37:
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab40
.Lab41:
   	call	BoundErr_		
.Lab40:
	pushl	%eax
	movl	24(%ebp),%eax
	call	%eax
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab35
.Lab36:
.LN57:
	.stabn  68,0,373,.LN57-Sets_Exists1		# line 373, column 55
	incw	-8(%ebp) 
.Lab35:
.LN58:
	.stabn  68,0,371,.LN58-Sets_Exists1		# line 371, column 10
	movw	-6(%ebp),%ax
	cmpw	-24(%ebp),%ax
	jae	.Lab33
	incw	-6(%ebp) 
	jmp	.Lab34
.Lab33:
.LN59:
	.stabn  68,0,375,.LN59-Sets_Exists1		# line 375, column 10
	cmpw	$1,-8(%ebp)
	sete	%al
	leave
	ret
.LN60:
	.stabn  68,0,376,.LN60-Sets_Exists1		# line 376, column 0
	call	ReturnErr_
.LBE8:
	leave
	ret
	.Lab32 = 24
	.stabs "n:3",128,0,2,-8
	.stabs "i:3",128,0,2,-6
	.stabs "ProcOftElementToBool:t23=12",128,0,0,0
	.stabs "Proc:p23",160,0,4,24
	.stabs "Set:p18",160,0,14,8
	.stabn 192,0,0,.LBB8
	.stabn 224,0,0,.LBE8
	.stabs "Sets_Exists:F1",36,0,0,Sets_Exists
	.align 4
Sets_Exists:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab42, %esp
.LN61:
	.stabn  68,0,356,.LN61-Sets_Exists		# line 356, column 4
.LBB9:
	leal	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN62:
	.stabn  68,0,358,.LN62-Sets_Exists		# line 358, column 10
	movl	-12(%ebp),%eax
	movw	10(%eax),%ax
	movw	%ax,-16(%ebp) 
	movl	-12(%ebp),%eax
	movw	12(%eax),%ax
	movw	%ax,-20(%ebp) 
	movw	-16(%ebp),%ax
	cmpw	-20(%ebp),%ax
	ja	.Lab43
	movw	-16(%ebp),%ax
	movw	%ax,-6(%ebp) 
	movw	-20(%ebp),%ax
	movw	%ax,-24(%ebp) 
.Lab44:
.LN63:
	.stabn  68,0,359,.LN63-Sets_Exists		# line 359, column 13
	leal	8(%ebp),%eax
	pushl	%eax
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab48
.Lab49:
   	call	BoundErr_		
.Lab48:
	pushl	%eax
	call	Sets_IsElement
	addl	$8, %esp
	cmpb	$0,%al
	je	.Lab45
.Lab47:
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab50
.Lab51:
   	call	BoundErr_		
.Lab50:
	pushl	%eax
	movl	24(%ebp),%eax
	call	%eax
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab45
.Lab46:
.LN64:
	.stabn  68,0,360,.LN64-Sets_Exists		# line 360, column 55
	movb	$1,%al
	leave
	ret
.Lab45:
.LN65:
	.stabn  68,0,358,.LN65-Sets_Exists		# line 358, column 10
	movw	-6(%ebp),%ax
	cmpw	-24(%ebp),%ax
	jae	.Lab43
	incw	-6(%ebp) 
	jmp	.Lab44
.Lab43:
.LN66:
	.stabn  68,0,362,.LN66-Sets_Exists		# line 362, column 10
	movb	$0,%al
	leave
	ret
.LN67:
	.stabn  68,0,363,.LN67-Sets_Exists		# line 363, column 0
	call	ReturnErr_
.LBE9:
	leave
	ret
	.Lab42 = 24
	.stabs "i:3",128,0,2,-6
	.stabs "Proc:p23",160,0,4,24
	.stabs "Set:p18",160,0,14,8
	.stabn 192,0,0,.LBB9
	.stabn 224,0,0,.LBE9
	.stabs "Sets_Forall:F1",36,0,0,Sets_Forall
	.align 4
Sets_Forall:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab52, %esp
.LN68:
	.stabn  68,0,343,.LN68-Sets_Forall		# line 343, column 4
.LBB10:
	leal	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN69:
	.stabn  68,0,345,.LN69-Sets_Forall		# line 345, column 10
	movl	-12(%ebp),%eax
	movw	10(%eax),%ax
	movw	%ax,-16(%ebp) 
	movl	-12(%ebp),%eax
	movw	12(%eax),%ax
	movw	%ax,-20(%ebp) 
	movw	-16(%ebp),%ax
	cmpw	-20(%ebp),%ax
	ja	.Lab53
	movw	-16(%ebp),%ax
	movw	%ax,-6(%ebp) 
	movw	-20(%ebp),%ax
	movw	%ax,-24(%ebp) 
.Lab54:
.LN70:
	.stabn  68,0,346,.LN70-Sets_Forall		# line 346, column 13
	leal	8(%ebp),%eax
	pushl	%eax
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab58
.Lab59:
   	call	BoundErr_		
.Lab58:
	pushl	%eax
	call	Sets_IsElement
	addl	$8, %esp
	cmpb	$0,%al
	je	.Lab55
.Lab57:
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab60
.Lab61:
   	call	BoundErr_		
.Lab60:
	pushl	%eax
	movl	24(%ebp),%eax
	call	%eax
	addl	$4, %esp
	cmpb	$1,%al
	je	.Lab55
.Lab56:
.LN71:
	.stabn  68,0,348,.LN71-Sets_Forall		# line 348, column 18
	movb	$0,%al
	leave
	ret
.Lab55:
.LN72:
	.stabn  68,0,345,.LN72-Sets_Forall		# line 345, column 10
	movw	-6(%ebp),%ax
	cmpw	-24(%ebp),%ax
	jae	.Lab53
	incw	-6(%ebp) 
	jmp	.Lab54
.Lab53:
.LN73:
	.stabn  68,0,350,.LN73-Sets_Forall		# line 350, column 10
	movb	$1,%al
	leave
	ret
.LN74:
	.stabn  68,0,351,.LN74-Sets_Forall		# line 351, column 0
	call	ReturnErr_
.LBE10:
	leave
	ret
	.Lab52 = 24
	.stabs "i:3",128,0,2,-6
	.stabs "Proc:p23",160,0,4,24
	.stabs "Set:p18",160,0,14,8
	.stabn 192,0,0,.LBB10
	.stabn 224,0,0,.LBE10
	.stabs "Sets_IsEmpty:F1",36,0,0,Sets_IsEmpty
	.align 4
Sets_IsEmpty:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab62, %esp
.LN75:
	.stabn  68,0,324,.LN75-Sets_IsEmpty		# line 324, column 4
.LBB11:
	leal	8(%ebp),%eax
	movl	%eax,-16(%ebp) 
.LN76:
	.stabn  68,0,326,.LN76-Sets_IsEmpty		# line 326, column 10
	movl	-16(%ebp),%eax
	movw	10(%eax),%bx
	movl	-16(%ebp),%eax
	cmpw	12(%eax),%bx
	ja	.Lab63
.Lab64:
.LN77:
	.stabn  68,0,327,.LN77-Sets_IsEmpty		# line 327, column 15
	movw	$0,-6(%ebp) 
	jmp	.Lab65
.Lab66:
.LN78:
	.stabn  68,0,329,.LN78-Sets_IsEmpty		# line 329, column 18
	movl	-16(%ebp),%eax
	movl	(%eax),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
	movl	%eax,-12(%ebp) 
.LN79:
	.stabn  68,0,330,.LN79-Sets_IsEmpty		# line 330, column 16
	movl	-16(%ebp),%eax
	movl	(%eax),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
	cmpl	$0,%eax
	je	.Lab68
.Lab69:
.LN80:
	.stabn  68,0,332,.LN80-Sets_IsEmpty		# line 332, column 21
	movb	$0,%al
	leave
	ret
.Lab68:
.LN81:
	.stabn  68,0,334,.LN81-Sets_IsEmpty		# line 334, column 16
	incw	-6(%ebp) 
.Lab65:
.LN82:
	.stabn  68,0,328,.LN82-Sets_IsEmpty		# line 328, column 21
	movw	-6(%ebp),%bx
	movl	-16(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab66
.Lab67:
.Lab63:
.LN83:
	.stabn  68,0,337,.LN83-Sets_IsEmpty		# line 337, column 10
	movb	$1,%al
	leave
	ret
.LN84:
	.stabn  68,0,338,.LN84-Sets_IsEmpty		# line 338, column 0
	call	ReturnErr_
.LBE11:
	leave
	ret
	.Lab62 = 16
	.stabs "b:11",128,0,4,-12
	.stabs "i:3",128,0,2,-6
	.stabs "Set:p18",160,0,14,8
	.stabn 192,0,0,.LBB11
	.stabn 224,0,0,.LBE11
	.stabs "Sets_IsElement:F1",36,0,0,Sets_IsElement
	.align 4
Sets_IsElement:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab70, %esp
.LN85:
	.stabn  68,0,312,.LN85-Sets_IsElement		# line 312, column 4
.LBB12:
.LN86:
	.stabn  68,0,313,.LN86-Sets_IsElement		# line 313, column 6
	movl	12(%ebp),%eax
	cmpl	$0,(%eax)
	jne	.Lab73
.Lab72:
.LN87:
	.stabn  68,0,314,.LN87-Sets_IsElement		# line 314, column 11
	movb	$0,%al
	leave
	ret
	jmp	.Lab71
.Lab73:
.LN88:
	.stabn  68,0,316,.LN88-Sets_IsElement		# line 316, column 8
	movl	8(%ebp),%ecx
	andl	$31, %ecx 
	cmpl	$31,%ecx
	jbe	.Lab74
.Lab75:
   	call	BoundErr_		
.Lab74:
	movl	12(%ebp),%eax
	movl	(%eax),%ebx
	movl	8(%ebp),%eax
	shrl	$5, %eax 
	cmpl	$65535,%eax
	jbe	.Lab76
.Lab77:
   	call	BoundErr_		
.Lab76:
	movzwl	%ax,%eax
	btl	%ecx,(%ebx,%eax,4)
	setb	%al
	leave
	ret
.Lab71:
.LN89:
	.stabn  68,0,317,.LN89-Sets_IsElement		# line 317, column 0
	call	ReturnErr_
.LBE12:
	leave
	ret
	.Lab70 = 4
	.stabs "Set:v18",160,0,14,12
	.stabs "Elmt:p17",160,0,4,8
	.stabn 192,0,0,.LBB12
	.stabn 224,0,0,.LBE12
	.stabs "Sets_IsNotEqual:F1",36,0,0,Sets_IsNotEqual
	.align 4
Sets_IsNotEqual:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab78, %esp
.LN90:
	.stabn  68,0,307,.LN90-Sets_IsNotEqual		# line 307, column 4
.LBB13:
.LN91:
	.stabn  68,0,308,.LN91-Sets_IsNotEqual		# line 308, column 7
	leal	24(%ebp),%eax
	pushl	%eax
	leal	8(%ebp),%eax
	pushl	%eax
	call	Sets_IsEqual
	addl	$8, %esp
	cmpb	$1,%al
	je	.Lab80
.Lab79:
	movb	$1,-8(%ebp) 
	jmp	.Lab81
.Lab80:
	movb	$0,-8(%ebp) 
.Lab81:
	movb	-8(%ebp),%al
	leave
	ret
.LN92:
	.stabn  68,0,309,.LN92-Sets_IsNotEqual		# line 309, column 0
	call	ReturnErr_
.LBE13:
	leave
	ret
	.Lab78 = 8
	.stabs "Set2:p18",160,0,14,24
	.stabs "Set1:p18",160,0,14,8
	.stabn 192,0,0,.LBB13
	.stabn 224,0,0,.LBE13
	.stabs "Sets_IsEqual:F1",36,0,0,Sets_IsEqual
	.align 4
Sets_IsEqual:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab82, %esp
.LN93:
	.stabn  68,0,295,.LN93-Sets_IsEqual		# line 295, column 4
.LBB14:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN94:
	.stabn  68,0,297,.LN94-Sets_IsEqual		# line 297, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab83
.Lab84:
.LN95:
	.stabn  68,0,299,.LN95-Sets_IsEqual		# line 299, column 13
	movl	-12(%ebp),%eax
	movl	(%eax),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%ecx
	movl	12(%ebp),%eax
	movl	(%eax),%ebx
	movzwl	-6(%ebp),%eax
	cmpl	(%ebx,%eax,4),%ecx
	je	.Lab86
.Lab87:
.LN96:
	.stabn  68,0,299,.LN96-Sets_IsEqual		# line 299, column 56
	movb	$0,%al
	leave
	ret
.Lab86:
.LN97:
	.stabn  68,0,300,.LN97-Sets_IsEqual		# line 300, column 13
	incw	-6(%ebp) 
.Lab83:
.LN98:
	.stabn  68,0,298,.LN98-Sets_IsEqual		# line 298, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab84
.Lab85:
.LN99:
	.stabn  68,0,302,.LN99-Sets_IsEqual		# line 302, column 10
	movb	$1,%al
	leave
	ret
.LN100:
	.stabn  68,0,303,.LN100-Sets_IsEqual		# line 303, column 0
	call	ReturnErr_
.LBE14:
	leave
	ret
	.Lab82 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set2:v18",160,0,14,12
	.stabs "Set1:v18",160,0,14,8
	.stabn 192,0,0,.LBB14
	.stabn 224,0,0,.LBE14
	.stabs "Sets_IsStrictSubset:F1",36,0,0,Sets_IsStrictSubset
	.align 4
Sets_IsStrictSubset:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab88, %esp
.LN101:
	.stabn  68,0,289,.LN101-Sets_IsStrictSubset		# line 289, column 4
.LBB15:
.LN102:
	.stabn  68,0,290,.LN102-Sets_IsStrictSubset		# line 290, column 7
	leal	24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	leal	8(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Sets_IsSubset
	addl	$32, %esp
	cmpb	$0,%al
	je	.Lab91
.Lab89:
	leal	24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	leal	8(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Sets_IsNotEqual
	addl	$32, %esp
	cmpb	$0,%al
	je	.Lab91
.Lab90:
	movb	$1,-8(%ebp) 
	jmp	.Lab92
.Lab91:
	movb	$0,-8(%ebp) 
.Lab92:
	movb	-8(%ebp),%al
	leave
	ret
.LN103:
	.stabn  68,0,291,.LN103-Sets_IsStrictSubset		# line 291, column 0
	call	ReturnErr_
.LBE15:
	leave
	ret
	.Lab88 = 8
	.stabs "Set2:p18",160,0,14,24
	.stabs "Set1:p18",160,0,14,8
	.stabn 192,0,0,.LBB15
	.stabn 224,0,0,.LBE15
	.stabs "Sets_IsSubset:F1",36,0,0,Sets_IsSubset
	.align 4
Sets_IsSubset:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab93, %esp
.LN104:
	.stabn  68,0,277,.LN104-Sets_IsSubset		# line 277, column 4
.LBB16:
	leal	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN105:
	.stabn  68,0,279,.LN105-Sets_IsSubset		# line 279, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab94
.Lab95:
.LN106:
	.stabn  68,0,281,.LN106-Sets_IsSubset		# line 281, column 13
	movl	-12(%ebp),%eax
	movl	(%eax),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%ecx
	movl	24(%ebp),%ebx
	movzwl	-6(%ebp),%eax
	movl	%ecx,%edx
	and	(%ebx,%eax,4),%edx
	cmpl	%edx,%ecx
	je	.Lab97
.Lab98:
.LN107:
	.stabn  68,0,281,.LN107-Sets_IsSubset		# line 281, column 63
	movb	$0,%al
	leave
	ret
.Lab97:
.LN108:
	.stabn  68,0,282,.LN108-Sets_IsSubset		# line 282, column 13
	incw	-6(%ebp) 
.Lab94:
.LN109:
	.stabn  68,0,280,.LN109-Sets_IsSubset		# line 280, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab95
.Lab96:
.LN110:
	.stabn  68,0,284,.LN110-Sets_IsSubset		# line 284, column 10
	movb	$1,%al
	leave
	ret
.LN111:
	.stabn  68,0,285,.LN111-Sets_IsSubset		# line 285, column 0
	call	ReturnErr_
.LBE16:
	leave
	ret
	.Lab93 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set2:p18",160,0,14,24
	.stabs "Set1:p18",160,0,14,8
	.stabn 192,0,0,.LBB16
	.stabn 224,0,0,.LBE16
	.stabs "Sets_Extract:F17",36,0,0,Sets_Extract
	.align 4
Sets_Extract:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab99, %esp
.LN112:
	.stabn  68,0,269,.LN112-Sets_Extract		# line 269, column 4
.LBB17:
.LN113:
	.stabn  68,0,270,.LN113-Sets_Extract		# line 270, column 9
	pushl	8(%ebp)
	call	Sets_Minimum
	addl	$4, %esp
	movl	%eax,-8(%ebp) 
.LN114:
	.stabn  68,0,271,.LN114-Sets_Extract		# line 271, column 7
	pushl	-8(%ebp)
	pushl	8(%ebp)
	call	Sets_Exclude
	addl	$8, %esp
.LN115:
	.stabn  68,0,272,.LN115-Sets_Extract		# line 272, column 7
	movl	-8(%ebp),%eax
	leave
	ret
.LN116:
	.stabn  68,0,273,.LN116-Sets_Extract		# line 273, column 0
	call	ReturnErr_
.LBE17:
	leave
	ret
	.Lab99 = 8
	.stabs "i:17",128,0,4,-8
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB17
	.stabn 224,0,0,.LBE17
	.stabs "Sets_Select:F17",36,0,0,Sets_Select
	.align 4
Sets_Select:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab100, %esp
.LN117:
	.stabn  68,0,263,.LN117-Sets_Select		# line 263, column 4
.LBB18:
.LN118:
	.stabn  68,0,264,.LN118-Sets_Select		# line 264, column 7
	pushl	8(%ebp)
	call	Sets_Minimum
	addl	$4, %esp
	leave
	ret
.LN119:
	.stabn  68,0,265,.LN119-Sets_Select		# line 265, column 0
	call	ReturnErr_
.LBE18:
	leave
	ret
	.Lab100 = 4
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB18
	.stabn 224,0,0,.LBE18
	.stabs "Sets_Maximum:F17",36,0,0,Sets_Maximum
	.align 4
Sets_Maximum:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab101, %esp
.LN120:
	.stabn  68,0,248,.LN120-Sets_Maximum		# line 248, column 4
.LBB19:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN121:
	.stabn  68,0,250,.LN121-Sets_Maximum		# line 250, column 12
	movl	-12(%ebp),%eax
	movw	12(%eax),%ax
	movw	%ax,-6(%ebp) 
	jmp	.Lab102
.Lab103:
.LN122:
	.stabn  68,0,252,.LN122-Sets_Maximum		# line 252, column 13
	pushl	8(%ebp)
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab107
.Lab108:
   	call	BoundErr_		
.Lab107:
	pushl	%eax
	call	Sets_IsElement
	addl	$8, %esp
	cmpb	$0,%al
	je	.Lab105
.Lab106:
.LN123:
	.stabn  68,0,253,.LN123-Sets_Maximum		# line 253, column 25
	movl	-12(%ebp),%ebx
	movw	-6(%ebp),%ax
	movw	%ax,12(%ebx) 
.LN124:
	.stabn  68,0,254,.LN124-Sets_Maximum		# line 254, column 16
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab109
.Lab110:
   	call	BoundErr_		
.Lab109:
	leave
	ret
.Lab105:
.LN125:
	.stabn  68,0,256,.LN125-Sets_Maximum		# line 256, column 13
	decw	-6(%ebp) 
.Lab102:
.LN126:
	.stabn  68,0,251,.LN126-Sets_Maximum		# line 251, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	10(%eax),%bx
	jae	.Lab103
.Lab104:
.LN127:
	.stabn  68,0,258,.LN127-Sets_Maximum		# line 258, column 10
	movl	$0,%eax
	leave
	ret
.LN128:
	.stabn  68,0,259,.LN128-Sets_Maximum		# line 259, column 0
	call	ReturnErr_
.LBE19:
	leave
	ret
	.Lab101 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB19
	.stabn 224,0,0,.LBE19
	.stabs "Sets_Minimum:F17",36,0,0,Sets_Minimum
	.align 4
Sets_Minimum:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab111, %esp
.LN129:
	.stabn  68,0,232,.LN129-Sets_Minimum		# line 232, column 4
.LBB20:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN130:
	.stabn  68,0,234,.LN130-Sets_Minimum		# line 234, column 12
	movl	-12(%ebp),%eax
	movw	10(%eax),%ax
	movw	%ax,-6(%ebp) 
	jmp	.Lab112
.Lab113:
.LN131:
	.stabn  68,0,236,.LN131-Sets_Minimum		# line 236, column 13
	pushl	8(%ebp)
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab117
.Lab118:
   	call	BoundErr_		
.Lab117:
	pushl	%eax
	call	Sets_IsElement
	addl	$8, %esp
	cmpb	$0,%al
	je	.Lab115
.Lab116:
.LN132:
	.stabn  68,0,237,.LN132-Sets_Minimum		# line 237, column 26
	movl	-12(%ebp),%ebx
	movw	-6(%ebp),%ax
	movw	%ax,10(%ebx) 
.LN133:
	.stabn  68,0,238,.LN133-Sets_Minimum		# line 238, column 16
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab119
.Lab120:
   	call	BoundErr_		
.Lab119:
	leave
	ret
.Lab115:
.LN134:
	.stabn  68,0,240,.LN134-Sets_Minimum		# line 240, column 13
	incw	-6(%ebp) 
.Lab112:
.LN135:
	.stabn  68,0,235,.LN135-Sets_Minimum		# line 235, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	12(%eax),%bx
	jbe	.Lab113
.Lab114:
.LN136:
	.stabn  68,0,242,.LN136-Sets_Minimum		# line 242, column 10
	movl	$0,%eax
	leave
	ret
.LN137:
	.stabn  68,0,243,.LN137-Sets_Minimum		# line 243, column 0
	call	ReturnErr_
.LBE20:
	leave
	ret
	.Lab111 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB20
	.stabn 224,0,0,.LBE20
	.stabs "Sets_Size:F17",36,0,0,Sets_Size
	.align 4
Sets_Size:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab121, %esp
.LN138:
	.stabn  68,0,226,.LN138-Sets_Size		# line 226, column 4
.LBB21:
.LN139:
	.stabn  68,0,227,.LN139-Sets_Size		# line 227, column 7
	movl	8(%ebp),%eax
	movzwl	6(%eax),%eax
	cmpl	$65534,%eax
	jbe	.Lab122
.Lab123:
   	call	BoundErr_		
.Lab122:
	leave
	ret
.LN140:
	.stabn  68,0,228,.LN140-Sets_Size		# line 228, column 0
	call	ReturnErr_
.LBE21:
	leave
	ret
	.Lab121 = 4
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB21
	.stabn 224,0,0,.LBE21
	.stabs "Sets_Card:F17",36,0,0,Sets_Card
	.align 4
Sets_Card:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab124, %esp
.LN141:
	.stabn  68,0,212,.LN141-Sets_Card		# line 212, column 4
.LBB22:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN142:
	.stabn  68,0,214,.LN142-Sets_Card		# line 214, column 10
	movl	-12(%ebp),%eax
	cmpw	$65535,8(%eax)
	jne	.Lab125
.Lab126:
.LN143:
	.stabn  68,0,215,.LN143-Sets_Card		# line 215, column 18
	movl	-12(%ebp),%eax
	movw	$0,8(%eax) 
.LN144:
	.stabn  68,0,216,.LN144-Sets_Card		# line 216, column 13
	movl	-12(%ebp),%eax
	movw	10(%eax),%ax
	movw	%ax,-16(%ebp) 
	movl	-12(%ebp),%eax
	movw	12(%eax),%ax
	movw	%ax,-20(%ebp) 
	movw	-16(%ebp),%ax
	cmpw	-20(%ebp),%ax
	ja	.Lab127
	movw	-16(%ebp),%ax
	movw	%ax,-6(%ebp) 
	movw	-20(%ebp),%ax
	movw	%ax,-24(%ebp) 
.Lab128:
.LN145:
	.stabn  68,0,217,.LN145-Sets_Card		# line 217, column 16
	pushl	8(%ebp)
	movzwl	-6(%ebp),%eax
	cmpl	$65534,%eax
	jbe	.Lab131
.Lab132:
   	call	BoundErr_		
.Lab131:
	pushl	%eax
	call	Sets_IsElement
	addl	$8, %esp
	cmpb	$0,%al
	je	.Lab129
.Lab130:
.LN146:
	.stabn  68,0,218,.LN146-Sets_Card		# line 218, column 21
	movl	-12(%ebp),%eax
	incw	8(%eax) 
.Lab129:
.LN147:
	.stabn  68,0,216,.LN147-Sets_Card		# line 216, column 13
	movw	-6(%ebp),%ax
	cmpw	-24(%ebp),%ax
	jae	.Lab127
	incw	-6(%ebp) 
	jmp	.Lab128
.Lab127:
.Lab125:
.LN148:
	.stabn  68,0,221,.LN148-Sets_Card		# line 221, column 10
	movl	-12(%ebp),%eax
	movzwl	8(%eax),%eax
	cmpl	$65534,%eax
	jbe	.Lab133
.Lab134:
   	call	BoundErr_		
.Lab133:
	leave
	ret
.LN149:
	.stabn  68,0,222,.LN149-Sets_Card		# line 222, column 0
	call	ReturnErr_
.LBE22:
	leave
	ret
	.Lab124 = 24
	.stabs "i:3",128,0,2,-6
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB22
	.stabn 224,0,0,.LBE22
	.stabs "Sets_Exclude:F16",36,0,0,Sets_Exclude
	.align 4
Sets_Exclude:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab135, %esp
.LN150:
	.stabn  68,0,193,.LN150-Sets_Exclude		# line 193, column 4
.LBB23:
	movl	8(%ebp),%eax
	movl	%eax,-8(%ebp) 
.LN151:
	.stabn  68,0,195,.LN151-Sets_Exclude		# line 195, column 10
	movl	-8(%ebp),%eax
	movl	(%eax),%ecx
	movl	12(%ebp),%eax
	shrl	$5, %eax 
	cmpl	$65535,%eax
	jbe	.Lab136
.Lab137:
   	call	BoundErr_		
.Lab136:
	movzwl	%ax,%ebx
	movl	12(%ebp),%eax
	andl	$31, %eax 
	cmpl	$31,%eax
	jbe	.Lab138
.Lab139:
   	call	BoundErr_		
.Lab138:
	btrl	%eax,(%ecx,%ebx,4) 
.LN152:
	.stabn  68,0,198,.LN152-Sets_Exclude		# line 198, column 20
	movl	-8(%ebp),%eax
	movw	$65535,8(%eax) 
.LN153:
	.stabn  68,0,199,.LN153-Sets_Exclude		# line 199, column 10
	movl	12(%ebp),%ebx
	movl	-8(%ebp),%eax
	cmpw	10(%eax),%bx
	jne	.Lab140
.Lab142:
	movl	12(%ebp),%ebx
	movl	-8(%ebp),%eax
	cmpw	6(%eax),%bx
	jae	.Lab140
.Lab141:
.LN154:
	.stabn  68,0,201,.LN154-Sets_Exclude		# line 201, column 13
	movl	-8(%ebp),%eax
	incw	10(%eax) 
.Lab140:
.LN155:
	.stabn  68,0,203,.LN155-Sets_Exclude		# line 203, column 10
	movl	12(%ebp),%ebx
	movl	-8(%ebp),%eax
	cmpw	12(%eax),%bx
	jne	.Lab143
.Lab145:
	cmpl	$0,12(%ebp)
	jbe	.Lab143
.Lab144:
.LN156:
	.stabn  68,0,205,.LN156-Sets_Exclude		# line 205, column 13
	movl	-8(%ebp),%eax
	decw	12(%eax) 
.Lab143:
.LN157:
	.stabn  68,0,206,.LN157-Sets_Exclude		# line 206, column 0
.LBE23:
	leave
	ret
	.Lab135 = 8
	.stabs "Elmt:p17",160,0,4,12
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB23
	.stabn 224,0,0,.LBE23
	.stabs "Sets_Include:F16",36,0,0,Sets_Include
	.align 4
Sets_Include:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab146, %esp
.LN158:
	.stabn  68,0,177,.LN158-Sets_Include		# line 177, column 4
.LBB24:
	movl	8(%ebp),%eax
	movl	%eax,-8(%ebp) 
.LN159:
	.stabn  68,0,179,.LN159-Sets_Include		# line 179, column 10
	movl	-8(%ebp),%eax
	movl	(%eax),%ecx
	movl	12(%ebp),%eax
	shrl	$5, %eax 
	cmpl	$65535,%eax
	jbe	.Lab147
.Lab148:
   	call	BoundErr_		
.Lab147:
	movzwl	%ax,%ebx
	movl	12(%ebp),%eax
	andl	$31, %eax 
	cmpl	$31,%eax
	jbe	.Lab149
.Lab150:
   	call	BoundErr_		
.Lab149:
	btsl	%eax,(%ecx,%ebx,4) 
.LN160:
	.stabn  68,0,182,.LN160-Sets_Include		# line 182, column 20
	movl	-8(%ebp),%eax
	movw	$65535,8(%eax) 
.LN161:
	.stabn  68,0,185,.LN161-Sets_Include		# line 185, column 10
	movl	-8(%ebp),%ebx
	movl	12(%ebp),%eax
	cmpw	%ax,10(%ebx)
	jbe	.Lab151
.Lab152:
.LN162:
	.stabn  68,0,186,.LN162-Sets_Include		# line 186, column 25
	movl	-8(%ebp),%ebx
	movl	12(%ebp),%eax
	movw	%ax,10(%ebx) 
.Lab151:
.LN163:
	.stabn  68,0,187,.LN163-Sets_Include		# line 187, column 10
	movl	-8(%ebp),%ebx
	movl	12(%ebp),%eax
	cmpw	%ax,12(%ebx)
	jae	.Lab153
.Lab154:
.LN164:
	.stabn  68,0,188,.LN164-Sets_Include		# line 188, column 25
	movl	-8(%ebp),%ebx
	movl	12(%ebp),%eax
	movw	%ax,12(%ebx) 
.Lab153:
.LN165:
	.stabn  68,0,189,.LN165-Sets_Include		# line 189, column 0
.LBE24:
	leave
	ret
	.Lab146 = 8
	.stabs "Elmt:p17",160,0,4,12
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB24
	.stabn 224,0,0,.LBE24
	.stabs "Sets_Complement:F16",36,0,0,Sets_Complement
	.align 4
Sets_Complement:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab155, %esp
.LN166:
	.stabn  68,0,151,.LN166-Sets_Complement		# line 151, column 4
.LBB25:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN167:
	.stabn  68,0,153,.LN167-Sets_Complement		# line 153, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab156
.Lab157:
.LN168:
	.stabn  68,0,155,.LN168-Sets_Complement		# line 155, column 27
	movl	-12(%ebp),%eax
	movl	(%eax),%edx
	movzwl	-6(%ebp),%ecx
	movl	-12(%ebp),%eax
	movl	(%eax),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
	notl	%eax
 	andl	_Sets_s, %eax
	movl	%eax,(%edx,%ecx,4) 
.LN169:
	.stabn  68,0,156,.LN169-Sets_Complement		# line 156, column 13
	incw	-6(%ebp) 
.Lab156:
.LN170:
	.stabn  68,0,154,.LN170-Sets_Complement		# line 154, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jb	.Lab157
.Lab158:
.LN171:
	.stabn  68,0,160,.LN171-Sets_Complement		# line 160, column 12
	movl	-12(%ebp),%eax
	movl	(%eax),%edi
	movl	-12(%ebp),%eax
	movzwl	4(%eax),%esi
	movl	$0,%edx
	movl	-12(%ebp),%eax
	movw	6(%eax),%cx
	andw	$31, %cx 
	.data
	.align 2
.Lab159:
	.word	0,31
	.text
	boundw	%cx,.Lab159
 	subw 	$0,%cx
 	jl	.Lab160
	incb	%cl
	movl	$-1,%eax
	shll	%cl,%eax
	notl	%eax
	movw	$0,%cx
	shll	%cl,%eax
	orl	%eax,%edx
.Lab160:
	movl	-12(%ebp),%eax
	movl	(%eax),%ebx
	movl	-12(%ebp),%eax
	movzwl	4(%eax),%eax
	movl	(%ebx,%eax,4),%eax
	notl	%eax
 	andl	%edx, %eax
	movl	%eax,(%edi,%esi,4) 
.LN172:
	.stabn  68,0,168,.LN172-Sets_Complement		# line 168, column 10
	movl	-12(%ebp),%eax
	cmpw	$65535,8(%eax)
	je	.Lab161
.Lab162:
.LN173:
	.stabn  68,0,169,.LN173-Sets_Complement		# line 169, column 20
	movl	-12(%ebp),%ecx
	movl	-12(%ebp),%eax
	movw	$1,%bx
 	addw	6(%eax),%bx 
	movl	-12(%ebp),%eax
 	subw	8(%eax),%bx 
	movw	%bx,8(%ecx) 
.Lab161:
.LN174:
	.stabn  68,0,171,.LN174-Sets_Complement		# line 171, column 20
	movl	-12(%ebp),%eax
	movw	$0,10(%eax) 
.LN175:
	.stabn  68,0,172,.LN175-Sets_Complement		# line 172, column 20
	movl	-12(%ebp),%ebx
	movl	-12(%ebp),%eax
	movw	6(%eax),%ax
	movw	%ax,12(%ebx) 
.LN176:
	.stabn  68,0,173,.LN176-Sets_Complement		# line 173, column 0
.LBE25:
	leave
	ret
	.Lab155 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB25
	.stabn 224,0,0,.LBE25
	.stabs "Sets_SymDiff:F16",36,0,0,Sets_SymDiff
	.align 4
Sets_SymDiff:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab163, %esp
.LN177:
	.stabn  68,0,136,.LN177-Sets_SymDiff		# line 136, column 4
.LBB26:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN178:
	.stabn  68,0,138,.LN178-Sets_SymDiff		# line 138, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab164
.Lab165:
.LN179:
	.stabn  68,0,140,.LN179-Sets_SymDiff		# line 140, column 27
	movl	-12(%ebp),%eax
	movl	(%eax),%edi
	movzwl	-6(%ebp),%esi
	movl	-12(%ebp),%eax
	movl	(%eax),%edx
	movzwl	-6(%ebp),%ecx
	movl	12(%ebp),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
 	xorl	(%edx,%ecx,4), %eax 
	movl	%eax,(%edi,%esi,4) 
.LN180:
	.stabn  68,0,141,.LN180-Sets_SymDiff		# line 141, column 13
	incw	-6(%ebp) 
.Lab164:
.LN181:
	.stabn  68,0,139,.LN181-Sets_SymDiff		# line 139, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab165
.Lab166:
.LN182:
	.stabn  68,0,143,.LN182-Sets_SymDiff		# line 143, column 20
	movl	-12(%ebp),%eax
	movw	$65535,8(%eax) 
.LN183:
	.stabn  68,0,144,.LN183-Sets_SymDiff		# line 144, column 20
	movl	-12(%ebp),%eax
	pushl	%eax
	movzwl	22(%ebp),%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	movzwl	10(%eax),%eax
	pushl	%eax
	call	General_MinSHORTCARD
	addl	$8, %esp
	popl	%ebx
	movw	%ax,10(%ebx) 
.LN184:
	.stabn  68,0,145,.LN184-Sets_SymDiff		# line 145, column 20
	movl	-12(%ebp),%eax
	pushl	%eax
	movzwl	24(%ebp),%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	movzwl	12(%eax),%eax
	pushl	%eax
	call	General_MaxSHORTCARD
	addl	$8, %esp
	popl	%ebx
	movw	%ax,12(%ebx) 
.LN185:
	.stabn  68,0,146,.LN185-Sets_SymDiff		# line 146, column 0
.LBE26:
	leave
	ret
	.Lab163 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set2:p18",160,0,14,12
	.stabs "Set1:v18",160,0,14,8
	.stabn 192,0,0,.LBB26
	.stabn 224,0,0,.LBE26
	.stabs "Sets_Intersection:F16",36,0,0,Sets_Intersection
	.align 4
Sets_Intersection:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab167, %esp
.LN186:
	.stabn  68,0,121,.LN186-Sets_Intersection		# line 121, column 4
.LBB27:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN187:
	.stabn  68,0,123,.LN187-Sets_Intersection		# line 123, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab168
.Lab169:
.LN188:
	.stabn  68,0,125,.LN188-Sets_Intersection		# line 125, column 27
	movl	-12(%ebp),%eax
	movl	(%eax),%edi
	movzwl	-6(%ebp),%esi
	movl	-12(%ebp),%eax
	movl	(%eax),%edx
	movzwl	-6(%ebp),%ecx
	movl	12(%ebp),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
 	andl	(%edx,%ecx,4), %eax 
	movl	%eax,(%edi,%esi,4) 
.LN189:
	.stabn  68,0,126,.LN189-Sets_Intersection		# line 126, column 13
	incw	-6(%ebp) 
.Lab168:
.LN190:
	.stabn  68,0,124,.LN190-Sets_Intersection		# line 124, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab169
.Lab170:
.LN191:
	.stabn  68,0,128,.LN191-Sets_Intersection		# line 128, column 20
	movl	-12(%ebp),%eax
	movw	$65535,8(%eax) 
.LN192:
	.stabn  68,0,129,.LN192-Sets_Intersection		# line 129, column 20
	movl	-12(%ebp),%eax
	pushl	%eax
	movzwl	22(%ebp),%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	movzwl	10(%eax),%eax
	pushl	%eax
	call	General_MaxSHORTCARD
	addl	$8, %esp
	popl	%ebx
	movw	%ax,10(%ebx) 
.LN193:
	.stabn  68,0,130,.LN193-Sets_Intersection		# line 130, column 20
	movl	-12(%ebp),%eax
	pushl	%eax
	movzwl	24(%ebp),%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	movzwl	12(%eax),%eax
	pushl	%eax
	call	General_MinSHORTCARD
	addl	$8, %esp
	popl	%ebx
	movw	%ax,12(%ebx) 
.LN194:
	.stabn  68,0,131,.LN194-Sets_Intersection		# line 131, column 0
.LBE27:
	leave
	ret
	.Lab167 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set2:p18",160,0,14,12
	.stabs "Set1:v18",160,0,14,8
	.stabn 192,0,0,.LBB27
	.stabn 224,0,0,.LBE27
	.stabs "Sets_Difference:F16",36,0,0,Sets_Difference
	.align 4
Sets_Difference:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab171, %esp
.LN195:
	.stabn  68,0,108,.LN195-Sets_Difference		# line 108, column 4
.LBB28:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN196:
	.stabn  68,0,110,.LN196-Sets_Difference		# line 110, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab172
.Lab173:
.LN197:
	.stabn  68,0,112,.LN197-Sets_Difference		# line 112, column 27
	movl	-12(%ebp),%eax
	movl	(%eax),%edi
	movzwl	-6(%ebp),%esi
	movl	-12(%ebp),%eax
	movl	(%eax),%edx
	movzwl	-6(%ebp),%ecx
	movl	12(%ebp),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
	notl	%eax
 	andl	(%edx,%ecx,4), %eax
	movl	%eax,(%edi,%esi,4) 
.LN198:
	.stabn  68,0,113,.LN198-Sets_Difference		# line 113, column 13
	incw	-6(%ebp) 
.Lab172:
.LN199:
	.stabn  68,0,111,.LN199-Sets_Difference		# line 111, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab173
.Lab174:
.LN200:
	.stabn  68,0,115,.LN200-Sets_Difference		# line 115, column 15
	movl	-12(%ebp),%eax
	movw	$65535,8(%eax) 
.LN201:
	.stabn  68,0,116,.LN201-Sets_Difference		# line 116, column 0
.LBE28:
	leave
	ret
	.Lab171 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set2:p18",160,0,14,12
	.stabs "Set1:v18",160,0,14,8
	.stabn 192,0,0,.LBB28
	.stabn 224,0,0,.LBE28
	.stabs "Sets_Union:F16",36,0,0,Sets_Union
	.align 4
Sets_Union:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab175, %esp
.LN202:
	.stabn  68,0,93,.LN202-Sets_Union		# line 93, column 4
.LBB29:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN203:
	.stabn  68,0,95,.LN203-Sets_Union		# line 95, column 12
	movw	$0,-6(%ebp) 
	jmp	.Lab176
.Lab177:
.LN204:
	.stabn  68,0,97,.LN204-Sets_Union		# line 97, column 27
	movl	-12(%ebp),%eax
	movl	(%eax),%edi
	movzwl	-6(%ebp),%esi
	movl	-12(%ebp),%eax
	movl	(%eax),%edx
	movzwl	-6(%ebp),%ecx
	movl	12(%ebp),%ebx
	movzwl	-6(%ebp),%eax
	movl	(%ebx,%eax,4),%eax
 	orl	(%edx,%ecx,4), %eax 
	movl	%eax,(%edi,%esi,4) 
.LN205:
	.stabn  68,0,98,.LN205-Sets_Union		# line 98, column 13
	incw	-6(%ebp) 
.Lab176:
.LN206:
	.stabn  68,0,96,.LN206-Sets_Union		# line 96, column 18
	movw	-6(%ebp),%bx
	movl	-12(%ebp),%eax
	cmpw	4(%eax),%bx
	jbe	.Lab177
.Lab178:
.LN207:
	.stabn  68,0,100,.LN207-Sets_Union		# line 100, column 20
	movl	-12(%ebp),%eax
	movw	$65535,8(%eax) 
.LN208:
	.stabn  68,0,101,.LN208-Sets_Union		# line 101, column 20
	movl	-12(%ebp),%eax
	pushl	%eax
	movzwl	22(%ebp),%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	movzwl	10(%eax),%eax
	pushl	%eax
	call	General_MinSHORTCARD
	addl	$8, %esp
	popl	%ebx
	movw	%ax,10(%ebx) 
.LN209:
	.stabn  68,0,102,.LN209-Sets_Union		# line 102, column 20
	movl	-12(%ebp),%eax
	pushl	%eax
	movzwl	24(%ebp),%eax
	pushl	%eax
	movl	-12(%ebp),%eax
	movzwl	12(%eax),%eax
	pushl	%eax
	call	General_MaxSHORTCARD
	addl	$8, %esp
	popl	%ebx
	movw	%ax,12(%ebx) 
.LN210:
	.stabn  68,0,103,.LN210-Sets_Union		# line 103, column 0
.LBE29:
	leave
	ret
	.Lab175 = 12
	.stabs "i:3",128,0,2,-6
	.stabs "Set2:p18",160,0,14,12
	.stabs "Set1:v18",160,0,14,8
	.stabn 192,0,0,.LBB29
	.stabn 224,0,0,.LBE29
	.stabs "Sets_ReleaseSet:F16",36,0,0,Sets_ReleaseSet
	.align 4
Sets_ReleaseSet:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab179, %esp
.LN211:
	.stabn  68,0,85,.LN211-Sets_ReleaseSet		# line 85, column 4
.LBB30:
.LN212:
	.stabn  68,0,86,.LN212-Sets_ReleaseSet		# line 86, column 19
	movl	8(%ebp),%ebx
	movw	$1,%ax
 	addw	4(%ebx),%ax 
	movzwl	%ax,%eax
	movl	%eax,-8(%ebp) 
.LN213:
	.stabn  68,0,87,.LN213-Sets_ReleaseSet		# line 87, column 7
	pushl	$4
	leal	-8(%ebp),%eax
	pushl	%eax
	movl	$0,%eax
 	addl	8(%ebp),%eax 
	pushl	%eax
	call	DynArray_ReleaseArray
	addl	$12, %esp
.LN214:
	.stabn  68,0,88,.LN214-Sets_ReleaseSet		# line 88, column 7
	pushl	8(%ebp)
	call	Sets_InitNullSet
	addl	$4, %esp
.LN215:
	.stabn  68,0,89,.LN215-Sets_ReleaseSet		# line 89, column 0
.LBE30:
	leave
	ret
	.Lab179 = 8
	.stabs "BitsetCount:7",128,0,4,-8
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB30
	.stabn 224,0,0,.LBE30
	.stabs "Sets_MakeSet:F16",36,0,0,Sets_MakeSet
	.align 4
Sets_MakeSet:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab180, %esp
.LN216:
	.stabn  68,0,69,.LN216-Sets_MakeSet		# line 69, column 4
.LBB31:
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
.LN217:
	.stabn  68,0,72,.LN217-Sets_MakeSet		# line 72, column 12
	movl	$32,%ebx
 	addl	12(%ebp),%ebx 
	movl	12(%ebp),%eax
	andl	$31, %eax 
 	subl	%eax,%ebx 
	shrl	$5, %ebx 
	cmpl	$2147483647,%ebx
	jbe	.Lab181
.Lab182:
   	call	BoundErr_		
.Lab181:
	movl	%ebx,-8(%ebp) 
.LN218:
	.stabn  68,0,76,.LN218-Sets_MakeSet		# line 76, column 10
	pushl	$4
	leal	-8(%ebp),%eax
	pushl	%eax
	movl	$0,%eax
 	addl	-12(%ebp),%eax 
	pushl	%eax
	call	DynArray_MakeArray
	addl	$12, %esp
.LN219:
	.stabn  68,0,77,.LN219-Sets_MakeSet		# line 77, column 18
	movl	-12(%ebp),%ebx
	movl	12(%ebp),%eax
	movw	%ax,6(%ebx) 
.LN220:
	.stabn  68,0,78,.LN220-Sets_MakeSet		# line 78, column 21
	movl	-12(%ebp),%ebx
	movl	-8(%ebp),%eax
 	subl	$1,%eax 
	.data
	.align 4
.Lab183:
	.long	0,65535
	.text
	boundl	%eax,.Lab183
	movw	%ax,4(%ebx) 
.LN221:
	.stabn  68,0,79,.LN221-Sets_MakeSet		# line 79, column 10
	pushl	8(%ebp)
	call	Sets_AssignEmpty
	addl	$4, %esp
.LN222:
	.stabn  68,0,80,.LN222-Sets_MakeSet		# line 80, column 0
.LBE31:
	leave
	ret
	.Lab180 = 12
	.stabs "BitsetCount:7",128,0,4,-8
	.stabs "MaxElement:p17",160,0,4,12
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB31
	.stabn 224,0,0,.LBE31
	.stabs "Sets_InitNullSet:F16",36,0,0,Sets_InitNullSet
	.align 4
Sets_InitNullSet:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab184, %esp
.LN223:
	.stabn  68,0,55,.LN223-Sets_InitNullSet		# line 55, column 3
.LBB32:
	movl	8(%ebp),%eax
	movl	%eax,-8(%ebp) 
.LN224:
	.stabn  68,0,58,.LN224-Sets_InitNullSet		# line 58, column 15
	movl	-8(%ebp),%eax
	movw	$0,6(%eax) 
.LN225:
	.stabn  68,0,59,.LN225-Sets_InitNullSet		# line 59, column 18
	movl	-8(%ebp),%eax
	movw	$0,4(%eax) 
.LN226:
	.stabn  68,0,60,.LN226-Sets_InitNullSet		# line 60, column 12
	movl	-8(%ebp),%eax
	movw	$0,8(%eax) 
.LN227:
	.stabn  68,0,61,.LN227-Sets_InitNullSet		# line 61, column 17
	movl	-8(%ebp),%eax
	movw	$0,10(%eax) 
.LN228:
	.stabn  68,0,62,.LN228-Sets_InitNullSet		# line 62, column 16
	movl	-8(%ebp),%eax
	movw	$0,12(%eax) 
.LN229:
	.stabn  68,0,63,.LN229-Sets_InitNullSet		# line 63, column 17
	movl	-8(%ebp),%eax
	movl	$0,(%eax) 
.LN230:
	.stabn  68,0,64,.LN230-Sets_InitNullSet		# line 64, column 0
.LBE32:
	leave
	ret
	.Lab184 = 8
	.stabs "Set:v18",160,0,14,8
	.stabn 192,0,0,.LBB32
	.stabn 224,0,0,.LBE32
	.stabs "Sets:F16",36,0,0,Sets
	.align 4
Sets:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab185, %esp
.LN231:
	.stabn  68,0,473,.LN231-Sets		# line 473, column 1
.LBB33:
.LN232:
	.stabn  68,0,474,.LN232-Sets		# line 474, column 12
	movl	$-1,_Sets_s 
.LN233:
	.stabn  68,0,475,.LN233-Sets		# line 475, column 4
	jmp	.Lab186
.Lab187:
.LN234:
	.stabn  68,0,476,.LN234-Sets		# line 476, column 7
	.data
.Lab188:
 	.ascii	"TSIZE (BITSET) = \000"
	.text
	pushl	$17
	leal	.Lab188,%eax
	pushl	%eax
	pushl	$2
	call	IO_WriteS
	addl	$12, %esp
.LN235:
	.stabn  68,0,477,.LN235-Sets		# line 477, column 7
	pushl	$0
	pushl	$4
	pushl	$2
	call	IO_WriteCard
	addl	$12, %esp
.LN236:
	.stabn  68,0,478,.LN236-Sets		# line 478, column 7
	pushl	$2
	call	IO_WriteNl
	addl	$4, %esp
.Lab186:
.LN237:
	.stabn  68,0,479,.LN237-Sets		# line 479, column 0
.LBE33:
	leave
	ret
	.Lab185 = 4
	.stabs "NoCard:c=i65535",128,0,0,0
	.stabs "BytesPerBitset:c=i4",128,0,0,0
	.stabs "BitsPerByte:c=i8",128,0,0,0
	.stabs "BitsPerBitset:c=i32",128,0,0,0
	.stabn 192,0,0,.LBB33
	.stabn 224,0,0,.LBE33
	.stabs "Sets_s:Gs8g:21,32,32;AllBits:11,0,32;;",32,0,0,0

BIN	= $(INSTALLGMD)/bin
LIB	= $(INSTALLGMD)/lib

OPT	= -O
CC	= cc

                # C library (reuse)
REUSE	= ../../reuse/m2c

                # C library
CLIBS	= $(REUSE)/libreuse.a

                # options for cc
CFLAGS	= -w $(OPT) -I$(REUSE)

                # options for mtc
M2FLAGS = -d$(REUSE)

EXE     = GetImports

cleanm2c:
	cd ../src; make cleanm2c

cleancompile: cleanm2c
	rm -f *.o $(EXE)

compile: $(EXE)

m2c:   sources

install: GetImports ../src/makemake.sh $(BIN) $(LIB)/makemake \
        ../src/Scanner.Tab ../src/Parser.Tab ../src/makemake.awk
	if test $(LIB) = $(BIN); then echo error: BIN = LIB; false; else true; fi
	sed 's;^LIB=.*;LIB=$(LIB)/makemake;' < ../src/makemake.sh > $(BIN)/makemake
	chmod a+rx $(BIN)/makemake
	install -c -s -m 755 GetImports $(LIB)/makemake
	install -c -m 644 ../src/Scanner.Tab $(LIB)/makemake
	install -c -m 644 ../src/Parser.Tab $(LIB)/makemake
	install -c -m 644 ../src/makemake.awk $(LIB)/makemake

# installation directories

$(BIN):
	sh -c "if test ! -d $(BIN); then mkdir $(BIN); else true; fi"

$(LIB):
	sh -c "if test ! -d $(LIB); then mkdir $(LIB); else true; fi"

$(LIB)/makemake:	$(LIB)
	sh -c "if test ! -d $(LIB)/makemake; then mkdir $(LIB)/makemake; else true; fi"

# swap all byte pairs of the file Scanner.Tab
# reverse all BITSETs (long words) of the file Parser.Tab

bin.conv:	convert
	dd conv=swab < Scanner.Tab > .Scanner.Tab; mv .Scanner.Tab Scanner.Tab
	dd conv=swab < Parser.Tab | convert > .Parser.Tab; mv .Parser.Tab Parser.Tab

convert:	convert.o
	cc -o convert convert.o

# Generated sources:

Scanner.md Scanner.mi:	modula.rex
	rex -d modula.rex;

Parser.md Parser.mi:	modula.ell
	ell -di modula.ell;

# HEAD

sources	: Errors.h

sources	: Errors.c
Errors.o	: Errors.c Errors.h

sources	: GetImports.c
all	: GetImports
GetImports.o	: GetImports.c
GetImports.o	: Scanner.h
GetImports.o	: Parser.h
GetImports.o	: Errors.h

sources	: Parser.h
Parser.h	: Scanner.h

sources	: Parser.c
Parser.o	: Parser.c Parser.h
Parser.o	: Errors.h
Parser.o	: Scanner.h
Parser.o	: Scanner.h
Parser.o	: Errors.h

sources	: Scanner.h

sources	: Scanner.c
Scanner.o	: Scanner.c Scanner.h
Scanner.o	: Errors.h

SYSTEM_.o	: SYSTEM_.c SYSTEM_.h

GetImports	: $(CLIBS)	\
	GetImports.o	\
	Errors.o	\
	Parser.o	\
	Scanner.o	\
;	$(CC) $(CFLAGS) -o GetImports 	\
	GetImports.o	\
	Errors.o	\
	Parser.o	\
	Scanner.o	\
	$(CLIBS)

# TAIL

clean	:
	rm -f core *.o

.SUFFIXES: .md .mi .h .c .o

.mi.c:
	mtc $(M2FLAGS) $*.mi;

.md.h:
	mtc $(M2FLAGS) $*.md;

.c.o:
	$(CC) $(CFLAGS) -c $*.c;


